name: Build Verify - Container

on:
  pull_request:
    branches:
      - release/*

env:
  IMAGE: docker.pkg.github.com/ghouston16/poi-tracker-api/python-poi-api
  REGISTRY: ghcr.io

jobs:
 
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    environment:
      name: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GH_ACTOR }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest
          labels: ${{ steps.meta.outputs.labels }}
  # https://testdriven.io/courses/tdd-fastapi/continuous-integration/ 
  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: build
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      DATABASE_URL: ${{secrets.DATABASE_URL}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GH_ACTOR }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest
          docker build . -f Dockerfile.dev --tag  ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest
      - name: Run Pytest with Compose
        run: |
          echo --- Running test cases ---
          docker-compose -f docker-compose.yml up --build --exit-code-from api
          echo --- Completed test cases --- 