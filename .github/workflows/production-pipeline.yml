name: Continuous Integration and Delivery

on:
  push:
    branches:
      - feature/production-pipeline.yml

env:
  IMAGE: docker.pkg.github.com/$(echo $GH_REPOSITORY | tr '[A-Z]' '[a-z]')/python-poi-api

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Log in to GitHub Packages
        run: echo ${GH_TOKEN} | docker login -u ${GH_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./Dockerfile.prod \
      - name: Push image
        run: |
          docker push ${{ env.IMAGE }}:latest

  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          ref: main
      - name: Log in to GitHub Packages
        run: echo ${GH_TOKEN} | docker login -u ${GH_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./Dockerfile.prod \
      - name: Run container
        run: |
          docker run \
            -d \
            --name python-poi-api \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_URL=sqlite://sqlite.db \
            -e DATABASE_TEST_URL=sqlite://sqlite.db \
            -p 5003:8765 \
            ${{ env.IMAGE }}:latest
      - name: Pytest
        run: docker exec python-poi-api python -m pytest .
      - name: Flake8
        run: docker exec python-poi-api -m flake8 .
      - name: Black
        run: docker exec python-poi-api -m black . --check
      - name: isort
        run: docker exec python-poi-api -m isort . --check-only